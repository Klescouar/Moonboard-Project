{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Admin/UlploadImage.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($file: Upload!) {\\n    singleUpload(file: $file) {\\n      id\\n      path\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { withStyles } from '@material-ui/core/styles';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\nvar ERROR_TEXT = 'Sorry, adding your pic did not work...';\nvar SUCCESS_TEXT = 'Great, your pic is now added!';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: theme.spacing.unit\n    },\n    input: {\n      display: 'none'\n    }\n  };\n};\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadImage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openSuccessSnackBar: false,\n      openErrorSnackBar: false\n    };\n\n    _this.onDrop =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var _ref3, file, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref3 = _slicedToArray(_ref, 1), file = _ref3[0];\n                _context.next = 3;\n                return _this.props.mutate({\n                  variables: {\n                    file: file\n                  }\n                }).then(function () {\n                  _this.setState({\n                    openSuccessSnackBar: true\n                  });\n\n                  setTimeout(function () {\n                    _this.setState({\n                      openSuccessSnackBar: false\n                    });\n                  }, 3000);\n                }).catch(function () {\n                  _this.setState({\n                    openErrorSnackBar: true\n                  });\n\n                  setTimeout(function () {\n                    _this.setState({\n                      openErrorSnackBar: false\n                    });\n                  }, 3000);\n                });\n\n              case 3:\n                response = _context.sent;\n\n                _this.props.getFileName(file.name);\n\n                return _context.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: \"UploadImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(SnackBarSuccess, {\n        text: SUCCESS_TEXT,\n        open: this.state.openSuccessSnackBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(SnackBarError, {\n        text: ERROR_TEXT,\n        open: this.state.openErrorSnackBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        accept: \"image/*\",\n        className: classes.input,\n        id: \"flat-button-file\",\n        onChange: function onChange(e) {\n          return _this2.onDrop(e.target.files);\n        },\n        multiple: true,\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"flat-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        component: \"span\",\n        className: \"UploadImage__Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Choose a pic\", React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nexport default graphql(gql(_templateObject()))(withStyles(styles)(UploadImage));","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Admin/UlploadImage.js"],"names":["React","Component","gql","graphql","Button","CloudUploadIcon","withStyles","SnackBarSuccess","SnackBarError","ERROR_TEXT","SUCCESS_TEXT","styles","theme","button","margin","spacing","unit","input","display","UploadImage","state","openSuccessSnackBar","openErrorSnackBar","onDrop","file","props","mutate","variables","then","setState","setTimeout","catch","response","getFileName","name","classes","e","target","files"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { withStyles } from '@material-ui/core/styles';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\n\nconst ERROR_TEXT = 'Sorry, adding your pic did not work...';\nconst SUCCESS_TEXT = 'Great, your pic is now added!';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nclass UploadImage extends Component {\n  state = {\n    openSuccessSnackBar: false,\n    openErrorSnackBar: false\n  };\n\n  onDrop = async ([file]) => {\n    const response = await this.props\n      .mutate({\n        variables: { file }\n      })\n      .then(() => {\n        this.setState({\n          openSuccessSnackBar: true\n        });\n        setTimeout(() => {\n          this.setState({\n            openSuccessSnackBar: false\n          });\n        }, 3000);\n      })\n      .catch(() => {\n        this.setState({\n          openErrorSnackBar: true\n        });\n        setTimeout(() => {\n          this.setState({\n            openErrorSnackBar: false\n          });\n        }, 3000);\n      });\n    this.props.getFileName(file.name);\n    return response;\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"UploadImage\">\n        <SnackBarSuccess\n          text={SUCCESS_TEXT}\n          open={this.state.openSuccessSnackBar}\n        />\n        <SnackBarError text={ERROR_TEXT} open={this.state.openErrorSnackBar} />\n        <input\n          accept=\"image/*\"\n          className={classes.input}\n          id=\"flat-button-file\"\n          onChange={e => this.onDrop(e.target.files)}\n          multiple\n          type=\"file\"\n        />\n        <label htmlFor=\"flat-button-file\">\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            component=\"span\"\n            className=\"UploadImage__Upload\"\n          >\n            Choose a pic\n            <CloudUploadIcon />\n          </Button>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default graphql(gql`\n  mutation($file: Upload!) {\n    singleUpload(file: $file) {\n      id\n      path\n      filename\n      mimetype\n      encoding\n    }\n  }\n`)(withStyles(styles)(UploadImage));\n"]},"metadata":{},"sourceType":"module"}