{"ast":null,"code":"import _classCallCheck from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Dialog/Dialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\n\nvar DialogPopin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DialogPopin, _Component);\n\n  function DialogPopin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DialogPopin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DialogPopin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openSuccessSnackBar: false,\n      openErrorSnackBar: false\n    };\n    return _this;\n  }\n\n  _createClass(DialogPopin, [{\n    key: \"componentDidmount\",\n    value: function componentDidmount() {\n      var _this2 = this;\n\n      if (!this.props.withDialog) this.props.action().then(function (res) {\n        _this2.setState({\n          openSuccessSnackBar: true,\n          openDialog: false\n        });\n\n        setTimeout(function () {\n          _this2.setState({\n            openSuccessSnackBar: false\n          });\n        }, 3000);\n      }).catch(function (err) {\n        _this2.setState({\n          openErrorSnackBar: true,\n          openDialog: false\n        });\n\n        setTimeout(function () {\n          _this2.setState({\n            openErrorSnackBar: false\n          });\n        }, 3000);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          fullScreen = _this$props.fullScreen,\n          withDialog = _this$props.withDialog,\n          _this$props$dialog = _this$props.dialog,\n          title = _this$props$dialog.title,\n          description = _this$props$dialog.description,\n          error = _this$props$dialog.error,\n          success = _this$props$dialog.success,\n          action = _this$props.action;\n      var _this$state = this.state,\n          openErrorSnackBar = _this$state.openErrorSnackBar,\n          openSuccessSnackBar = _this$state.openSuccessSnackBar;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(SnackBarSuccess, {\n        text: success,\n        open: openSuccessSnackBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(SnackBarError, {\n        text: error,\n        open: openErrorSnackBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        className: \"RemoveArticle__Dialog\",\n        fullScreen: fullScreen,\n        open: openDialog,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        className: \"RemoveArticle__Dialog__Title\",\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, title), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, description)), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return action().then(function (res) {\n            handleClose();\n\n            _this3.setState({\n              openSuccessSnackBar: true,\n              openDialog: false\n            });\n\n            setTimeout(function () {\n              _this3.setState({\n                openSuccessSnackBar: false\n              });\n            }, 3000);\n          }).catch(function (err) {\n            _this3.setState({\n              openErrorSnackBar: true,\n              openDialog: false\n            });\n\n            setTimeout(function () {\n              _this3.setState({\n                openErrorSnackBar: false\n              });\n            }, 3000);\n          });\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"No\"))));\n    }\n  }]);\n\n  return DialogPopin;\n}(Component);\n\nexport default DialogPopin;","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Dialog/Dialog.js"],"names":["React","Component","Fragment","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","SnackBarSuccess","SnackBarError","DialogPopin","state","openSuccessSnackBar","openErrorSnackBar","props","withDialog","action","then","res","setState","openDialog","setTimeout","catch","err","fullScreen","dialog","title","description","error","success","handleClose"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\n\nclass DialogPopin extends Component {\n  state = {\n    openSuccessSnackBar: false,\n    openErrorSnackBar: false\n  };\n\n  componentDidmount() {\n    if (!this.props.withDialog)\n      this.props\n        .action()\n        .then(res => {\n          this.setState({\n            openSuccessSnackBar: true,\n            openDialog: false\n          });\n          setTimeout(() => {\n            this.setState({\n              openSuccessSnackBar: false\n            });\n          }, 3000);\n        })\n        .catch(err => {\n          this.setState({\n            openErrorSnackBar: true,\n            openDialog: false\n          });\n          setTimeout(() => {\n            this.setState({\n              openErrorSnackBar: false\n            });\n          }, 3000);\n        });\n  }\n\n  render() {\n    const {\n      fullScreen,\n      withDialog,\n      dialog: { title, description, error, success },\n      action\n    } = this.props;\n    const { openErrorSnackBar, openSuccessSnackBar } = this.state;\n\n    return (\n      <Fragment>\n        <SnackBarSuccess text={success} open={openSuccessSnackBar} />\n        <SnackBarError text={error} open={openErrorSnackBar} />\n        <Dialog\n          className=\"RemoveArticle__Dialog\"\n          fullScreen={fullScreen}\n          open={openDialog}\n          onClose={handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle\n            className=\"RemoveArticle__Dialog__Title\"\n            id=\"responsive-dialog-title\"\n          >\n            {title}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>{description}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() =>\n                action()\n                  .then(res => {\n                    handleClose();\n                    this.setState({\n                      openSuccessSnackBar: true,\n                      openDialog: false\n                    });\n                    setTimeout(() => {\n                      this.setState({\n                        openSuccessSnackBar: false\n                      });\n                    }, 3000);\n                  })\n                  .catch(err => {\n                    this.setState({\n                      openErrorSnackBar: true,\n                      openDialog: false\n                    });\n                    setTimeout(() => {\n                      this.setState({\n                        openErrorSnackBar: false\n                      });\n                    }, 3000);\n                  })\n              }\n              color=\"primary\"\n            >\n              Yes\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              No\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default DialogPopin;\n"]},"metadata":{},"sourceType":"module"}