{"ast":null,"code":"import _classCallCheck from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Player/Player.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withSoundCloudAudio } from \"react-soundplayer/addons\";\nimport { PlayButton, Progress, VolumeControl } from \"react-soundplayer/components\";\n\nvar BackgroundSoundPlayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BackgroundSoundPlayer, _Component);\n\n  function BackgroundSoundPlayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BackgroundSoundPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BackgroundSoundPlayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.play = function () {\n      if (_this.props.playing) {\n        _this.props.soundCloudAudio.pause();\n      } else {\n        _this.props.soundCloudAudio.play();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BackgroundSoundPlayer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          duration = _this$props.duration,\n          currentTime = _this$props.currentTime,\n          article = _this$props.article,\n          playing = _this$props.playing,\n          soundCloudAudio = _this$props.soundCloudAudio;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"Player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Player__Image\",\n        src: require(\"../../assets/images/\".concat(article.image)),\n        alt: \"backgroundImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Player__Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({\n        className: classNames({\n          btn: true,\n          play: !this.props.playing,\n          paused: this.props.playing\n        }),\n        onClick: this.play\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"bar bar-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"bar bar-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Player__Button__Gauge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(VolumeControl, Object.assign({\n        className: \"Player__Button__Gauge__Volume\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Progress, Object.assign({\n        className: \"Player__Button__Gauge__Progress\",\n        value: currentTime / duration * 100 || 0\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))), React.createElement(\"p\", {\n        className: \"Player__Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Player__Description__Date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, article.date, \" - \", article.time, \" :\"), \" \", React.createElement(\"span\", {\n        className: \"Player__Description__Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"\\\"\", article.description, \"\\\"\")));\n    }\n  }]);\n\n  return BackgroundSoundPlayer;\n}(Component);\n\nBackgroundSoundPlayer.propTypes = {\n  resolveUrl: PropTypes.string.isRequired,\n  clientId: PropTypes.string.isRequired\n};\nexport default withSoundCloudAudio(BackgroundSoundPlayer);","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Player/Player.js"],"names":["React","Component","PropTypes","classNames","withSoundCloudAudio","PlayButton","Progress","VolumeControl","BackgroundSoundPlayer","play","props","playing","soundCloudAudio","pause","duration","currentTime","article","console","log","require","image","btn","paused","date","time","description","propTypes","resolveUrl","string","isRequired","clientId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withSoundCloudAudio } from \"react-soundplayer/addons\";\nimport {\n  PlayButton,\n  Progress,\n  VolumeControl\n} from \"react-soundplayer/components\";\n\nclass BackgroundSoundPlayer extends Component {\n  play = () => {\n    if (this.props.playing) {\n      this.props.soundCloudAudio.pause();\n    } else {\n      this.props.soundCloudAudio.play();\n    }\n  };\n  render() {\n    const {\n      duration,\n      currentTime,\n      article,\n      playing,\n      soundCloudAudio\n    } = this.props;\n\n    console.log(this.props);\n\n    return (\n      <div className=\"Player\">\n        <img\n          className=\"Player__Image\"\n          src={require(`../../assets/images/${article.image}`)}\n          alt=\"backgroundImage\"\n        />\n        <div className=\"Player__Button\">\n          <div\n            className={classNames({\n              btn: true,\n              play: !this.props.playing,\n              paused: this.props.playing\n            })}\n            onClick={this.play}\n            {...this.props}\n          >\n            <span class=\"bar bar-1\" />\n            <span class=\"bar bar-2\" />\n          </div>\n          <div className=\"Player__Button__Gauge\">\n            <VolumeControl\n              className=\"Player__Button__Gauge__Volume\"\n              {...this.props}\n            />\n            <Progress\n              className=\"Player__Button__Gauge__Progress\"\n              value={(currentTime / duration) * 100 || 0}\n              {...this.props}\n            />\n          </div>\n        </div>\n        <p className=\"Player__Description\">\n          <span className=\"Player__Description__Date\">\n            {article.date} - {article.time} :\n          </span>{\" \"}\n          <span className=\"Player__Description__Text\">\n            \"{article.description}\"\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n\nBackgroundSoundPlayer.propTypes = {\n  resolveUrl: PropTypes.string.isRequired,\n  clientId: PropTypes.string.isRequired\n};\n\nexport default withSoundCloudAudio(BackgroundSoundPlayer);\n"]},"metadata":{},"sourceType":"module"}