{"ast":null,"code":"import _objectWithoutProperties from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/SnackBar/SnackBarContent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nvar styles1 = function styles1(theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n};\n\nfunction SnackbarContentCustomized(props) {\n  var classes = props.classes,\n      className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"message\", \"onClose\", \"variant\"]);\n\n  var Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classNames(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), message)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}\n\nSnackbarContentCustomized.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nexport var MySnackbarContentWrapper = withStyles(styles1)(SnackbarContentCustomized);\nexport default SnackbarContentCustomized;","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/SnackBar/SnackBarContent.js"],"names":["React","PropTypes","classNames","withStyles","CheckCircleIcon","ErrorIcon","InfoIcon","green","amber","SnackbarContent","WarningIcon","variantIcon","success","warning","error","info","styles1","theme","backgroundColor","palette","dark","primary","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","SnackbarContentCustomized","props","classes","className","onClose","variant","other","Icon","propTypes","object","isRequired","string","node","func","oneOf","MySnackbarContentWrapper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nfunction SnackbarContentCustomized(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      {...other}\n    />\n  );\n}\n\nSnackbarContentCustomized.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\n\nexport const MySnackbarContentWrapper = withStyles(styles1)(\n  SnackbarContentCustomized\n);\n\nexport default SnackbarContentCustomized;\n"]},"metadata":{},"sourceType":"module"}