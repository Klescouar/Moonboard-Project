{"ast":null,"code":"import _classCallCheck from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Admin/handleArticle.js\";\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\nimport { Query, Mutation } from 'react-apollo';\nimport { DELETE_ARTICLE, GET_ARTICLES, GET_CHAPTERS } from '../../queries';\nvar ERROR_TEXT = 'Sorry, deleting your article did not work...';\nvar SUCCESS_TEXT = 'Great, your article is now removed!';\n\nvar RemoveArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RemoveArticle, _Component);\n\n  function RemoveArticle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RemoveArticle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RemoveArticle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openSuccessSnackBar: false,\n      openErrorSnackBar: false,\n      openDialog: false,\n      deleteArticle: {}\n    };\n\n    _this.handleDelete = function () {\n      _this.state.deleteArticle().then(function () {\n        _this.setState({\n          openSuccessSnackBar: true,\n          openDialog: false\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            openSuccessSnackBar: false\n          });\n        }, 3000);\n      }).catch(function () {\n        _this.setState({\n          openErrorSnackBar: true,\n          openDialog: false\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            openErrorSnackBar: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.handleClose = function (deleteArticle) {\n      _this.setState({\n        openDialog: false\n      });\n    };\n\n    _this.handleDialog = function (deleteArticle) {\n      _this.setState({\n        openDialog: true,\n        deleteArticle: deleteArticle\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RemoveArticle, [{\n    key: \"render\",\n    value: function render() {\n      var fullScreen = this.props.fullScreen;\n      return React.createElement(Query, {\n        query: GET_ARTICLES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        console.log(data);\n        if (loading) return React.createElement(CircularProgress, {\n          className: \"Spinner\",\n          size: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n        if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Error\");\n        return React.createElement(Button, {\n          variant: \"outlined\",\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Default\") // <div className=\"RemoveArticle\">\n        //   <Dialog\n        //     className=\"RemoveArticle__Dialog\"\n        //     fullScreen={fullScreen}\n        //     open={this.state.openDialog}\n        //     onClose={this.handleClose}\n        //     aria-labelledby=\"responsive-dialog-title\"\n        //   >\n        //     <DialogTitle\n        //       className=\"RemoveArticle__Dialog__Title\"\n        //       id=\"responsive-dialog-title\"\n        //     >\n        //       {'Remove Article'}\n        //     </DialogTitle>\n        //     <DialogContent>\n        //       <DialogContentText>\n        //         Are you sure you want to delete this article?\n        //       </DialogContentText>\n        //     </DialogContent>\n        //     <DialogActions>\n        //       <Button onClick={this.handleDelete} color=\"primary\">\n        //         Yes\n        //       </Button>\n        //       <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n        //         No\n        //       </Button>\n        //     </DialogActions>\n        //   </Dialog>\n        //   <SnackBarSuccess\n        //     text={SUCCESS_TEXT}\n        //     open={this.state.openSuccessSnackBar}\n        //   />\n        //   <SnackBarError\n        //     text={ERROR_TEXT}\n        //     open={this.state.openErrorSnackBar}\n        //   />\n        //   {!data.getArticles.length && (\n        //     <p>\n        //       <strong>You have not added any articles yet</strong>\n        //     </p>\n        //   )}\n        //   <div className=\"RemoveArticle__Articles\">\n        //     {data.getArticles.map(article => (\n        //       <div\n        //         className=\"RemoveArticle__Articles__Article\"\n        //         key={article._id}\n        //       >\n        //         <Mutation\n        //           mutation={DELETE_ARTICLE}\n        //           variables={{ _id: article._id }}\n        //           refetchQueries={() => [{ query: GET_ARTICLES }]}\n        //           update={(cache, { data: { deleteArticle } }) => {\n        //             const { getArticles } = cache.readQuery({\n        //               query: GET_ARTICLES\n        //             });\n        //\n        //             cache.writeQuery({\n        //               query: GET_ARTICLES,\n        //\n        //               data: {\n        //                 getArticles: getArticles.filter(\n        //                   article => article._id !== deleteArticle._id\n        //                 )\n        //               }\n        //             });\n        //           }}\n        //         >\n        //           {(deleteArticle, attrs = {}) => {\n        //             return (\n        //               <Card className=\"RemoveArticle__Articles__Article__Card\">\n        //                 <CardMedia\n        //                   className=\"RemoveArticle__Articles__Article__Card__Image\"\n        //                   image={require(`../../assets/images/${\n        //                     article.image\n        //                   }`)}\n        //                   title=\"Contemplative Reptile\"\n        //                 />\n        //                 <CardContent className=\"RemoveArticle__Articles__Article__Card__Content\">\n        //                   <Typography\n        //                     gutterBottom\n        //                     variant=\"headline\"\n        //                     component=\"h2\"\n        //                     className=\"RemoveArticle__Articles__Article__Card__Content__Title\"\n        //                   >\n        //                     {article.title}\n        //                   </Typography>\n        //                   <Typography component=\"p\">\n        //                     {article.description}\n        //                   </Typography>\n        //                 </CardContent>\n        //                 <CardActions className=\"RemoveArticle__Articles__Article__Card__Action\">\n        //                   <Button\n        //                     size=\"small\"\n        //                     onClick={() => this.handleDialog(deleteArticle)}\n        //                     color=\"primary\"\n        //                     variant=\"outlined\"\n        //                     className=\"RemoveArticle__Articles__Article__Card__Action__Button\"\n        //                   >\n        //                     {attrs.loading ? 'deleting...' : 'DELETE'}\n        //                   </Button>\n        //                 </CardActions>\n        //               </Card>\n        //             );\n        //           }}\n        //         </Mutation>\n        //       </div>\n        //     ))}\n        //   </div>\n        // </div>\n        ;\n      });\n    }\n  }]);\n\n  return RemoveArticle;\n}(Component);\n\nexport default withMobileDialog()(RemoveArticle);","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Admin/handleArticle.js"],"names":["React","Component","Card","CardActions","CardContent","CardMedia","Button","Icon","Typography","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","withMobileDialog","SnackBarSuccess","SnackBarError","Query","Mutation","DELETE_ARTICLE","GET_ARTICLES","GET_CHAPTERS","ERROR_TEXT","SUCCESS_TEXT","RemoveArticle","state","openSuccessSnackBar","openErrorSnackBar","openDialog","deleteArticle","handleDelete","then","setState","setTimeout","catch","handleClose","handleDialog","fullScreen","props","data","loading","error","console","log","classes","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\n\nimport { Query, Mutation } from 'react-apollo';\nimport { DELETE_ARTICLE, GET_ARTICLES, GET_CHAPTERS } from '../../queries';\n\nconst ERROR_TEXT = 'Sorry, deleting your article did not work...';\nconst SUCCESS_TEXT = 'Great, your article is now removed!';\n\nclass RemoveArticle extends Component {\n  state = {\n    openSuccessSnackBar: false,\n    openErrorSnackBar: false,\n    openDialog: false,\n    deleteArticle: {}\n  };\n\n  handleDelete = () => {\n    this.state\n      .deleteArticle()\n      .then(() => {\n        this.setState({\n          openSuccessSnackBar: true,\n          openDialog: false\n        });\n        setTimeout(() => {\n          this.setState({\n            openSuccessSnackBar: false\n          });\n        }, 3000);\n      })\n      .catch(() => {\n        this.setState({\n          openErrorSnackBar: true,\n          openDialog: false\n        });\n        setTimeout(() => {\n          this.setState({\n            openErrorSnackBar: false\n          });\n        }, 3000);\n      });\n  };\n\n  handleClose = deleteArticle => {\n    this.setState({ openDialog: false });\n  };\n\n  handleDialog = deleteArticle => {\n    this.setState({\n      openDialog: true,\n      deleteArticle: deleteArticle\n    });\n  };\n\n  render() {\n    const { fullScreen } = this.props;\n    return (\n      <Query query={GET_ARTICLES}>\n        {({ data, loading, error }) => {\n          console.log(data);\n          if (loading)\n            return <CircularProgress className=\"Spinner\" size={50} />;\n          if (error) return <div>Error</div>;\n          return (\n            <Button variant=\"outlined\" className={classes.button}>\n              Default\n            </Button>\n            // <div className=\"RemoveArticle\">\n            //   <Dialog\n            //     className=\"RemoveArticle__Dialog\"\n            //     fullScreen={fullScreen}\n            //     open={this.state.openDialog}\n            //     onClose={this.handleClose}\n            //     aria-labelledby=\"responsive-dialog-title\"\n            //   >\n            //     <DialogTitle\n            //       className=\"RemoveArticle__Dialog__Title\"\n            //       id=\"responsive-dialog-title\"\n            //     >\n            //       {'Remove Article'}\n            //     </DialogTitle>\n            //     <DialogContent>\n            //       <DialogContentText>\n            //         Are you sure you want to delete this article?\n            //       </DialogContentText>\n            //     </DialogContent>\n            //     <DialogActions>\n            //       <Button onClick={this.handleDelete} color=\"primary\">\n            //         Yes\n            //       </Button>\n            //       <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n            //         No\n            //       </Button>\n            //     </DialogActions>\n            //   </Dialog>\n            //   <SnackBarSuccess\n            //     text={SUCCESS_TEXT}\n            //     open={this.state.openSuccessSnackBar}\n            //   />\n            //   <SnackBarError\n            //     text={ERROR_TEXT}\n            //     open={this.state.openErrorSnackBar}\n            //   />\n            //   {!data.getArticles.length && (\n            //     <p>\n            //       <strong>You have not added any articles yet</strong>\n            //     </p>\n            //   )}\n            //   <div className=\"RemoveArticle__Articles\">\n            //     {data.getArticles.map(article => (\n            //       <div\n            //         className=\"RemoveArticle__Articles__Article\"\n            //         key={article._id}\n            //       >\n            //         <Mutation\n            //           mutation={DELETE_ARTICLE}\n            //           variables={{ _id: article._id }}\n            //           refetchQueries={() => [{ query: GET_ARTICLES }]}\n            //           update={(cache, { data: { deleteArticle } }) => {\n            //             const { getArticles } = cache.readQuery({\n            //               query: GET_ARTICLES\n            //             });\n            //\n            //             cache.writeQuery({\n            //               query: GET_ARTICLES,\n            //\n            //               data: {\n            //                 getArticles: getArticles.filter(\n            //                   article => article._id !== deleteArticle._id\n            //                 )\n            //               }\n            //             });\n            //           }}\n            //         >\n            //           {(deleteArticle, attrs = {}) => {\n            //             return (\n            //               <Card className=\"RemoveArticle__Articles__Article__Card\">\n            //                 <CardMedia\n            //                   className=\"RemoveArticle__Articles__Article__Card__Image\"\n            //                   image={require(`../../assets/images/${\n            //                     article.image\n            //                   }`)}\n            //                   title=\"Contemplative Reptile\"\n            //                 />\n            //                 <CardContent className=\"RemoveArticle__Articles__Article__Card__Content\">\n            //                   <Typography\n            //                     gutterBottom\n            //                     variant=\"headline\"\n            //                     component=\"h2\"\n            //                     className=\"RemoveArticle__Articles__Article__Card__Content__Title\"\n            //                   >\n            //                     {article.title}\n            //                   </Typography>\n            //                   <Typography component=\"p\">\n            //                     {article.description}\n            //                   </Typography>\n            //                 </CardContent>\n            //                 <CardActions className=\"RemoveArticle__Articles__Article__Card__Action\">\n            //                   <Button\n            //                     size=\"small\"\n            //                     onClick={() => this.handleDialog(deleteArticle)}\n            //                     color=\"primary\"\n            //                     variant=\"outlined\"\n            //                     className=\"RemoveArticle__Articles__Article__Card__Action__Button\"\n            //                   >\n            //                     {attrs.loading ? 'deleting...' : 'DELETE'}\n            //                   </Button>\n            //                 </CardActions>\n            //               </Card>\n            //             );\n            //           }}\n            //         </Mutation>\n            //       </div>\n            //     ))}\n            //   </div>\n            // </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withMobileDialog()(RemoveArticle);\n"]},"metadata":{},"sourceType":"module"}