{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Admin/UlploadImage.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($file: Upload!) {\\n    singleUpload(file: $file) {\\n      id\\n      path\\n      filename\\n      mimetype\\n      encoding\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { withStyles } from '@material-ui/core/styles';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: theme.spacing.unit\n    },\n    input: {\n      display: 'none'\n    }\n  };\n};\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadImage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDrop =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var _ref3, file, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ref3 = _slicedToArray(_ref, 1), file = _ref3[0];\n                _context.next = 3;\n                return _this.props.mutate({\n                  variables: {\n                    file: file\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n\n                _this.props.getFileName(file.name);\n\n                return _context.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: \"UploadImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"UploadImage__Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Choose a pic\"), React.createElement(\"input\", {\n        accept: \"image/*\",\n        className: classes.input,\n        id: \"flat-button-file\",\n        onChange: function onChange(e) {\n          return _this2.onDrop(e.target.files);\n        },\n        multiple: true,\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"flat-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        component: \"span\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Upload\", React.createElement(CloudUploadIcon, {\n        className: classes.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\n{\n  /* <Dropzone onDrop={this.onDrop}>Arrastre aqui un archivo</Dropzone>;  */\n}\nexport default graphql(gql(_templateObject()))(withStyles(styles)(UploadImage));","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Admin/UlploadImage.js"],"names":["React","Component","Button","CloudUploadIcon","withStyles","gql","graphql","styles","theme","button","margin","spacing","unit","input","display","UploadImage","onDrop","file","props","mutate","variables","response","getFileName","name","classes","e","target","files","rightIcon"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcC;AADhB,KADe;AAIvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ;AAJgB,GAAL;AAAA,CAApB;;IASMC,W;;;;;;;;;;;;;;;;;;UACJC,M;;;;;+BAAS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAQC,IAAR;AAAA;AAAA,uBACgB,MAAKC,KAAL,CAAWC,MAAX,CAAkB;AACvCC,kBAAAA,SAAS,EAAE;AAAEH,oBAAAA,IAAI,EAAJA;AAAF;AAD4B,iBAAlB,CADhB;;AAAA;AACDI,gBAAAA,QADC;;AAIP,sBAAKH,KAAL,CAAWI,WAAX,CAAuBL,IAAI,CAACM,IAA5B;;AAJO,iDAKAF,QALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAQA;AAAA;;AAAA,UACCG,OADD,GACa,KAAKN,KADlB,CACCM,OADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,QAAA,MAAM,EAAC,SADT;AAEE,QAAA,SAAS,EAAEA,OAAO,CAACX,KAFrB;AAGE,QAAA,EAAE,EAAC,kBAHL;AAIE,QAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,iBAAI,MAAI,CAACT,MAAL,CAAYS,CAAC,CAACC,MAAF,CAASC,KAArB,CAAJ;AAAA,SAJb;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,EAAC,MAHZ;AAIE,QAAA,SAAS,EAAEH,OAAO,CAACf,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAEe,OAAO,CAACI,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CAVF,CADF;AAwBD;;;;EAnCuB3B,S;;AAsC1B;AACE;AACD;AAED,eAAeK,OAAO,CAACD,GAAD,oBAAP,CAUZD,UAAU,CAACG,MAAD,CAAV,CAAmBQ,WAAnB,CAVY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { withStyles } from '@material-ui/core/styles';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nclass UploadImage extends Component {\n  onDrop = async ([file]) => {\n    const response = await this.props.mutate({\n      variables: { file }\n    });\n    this.props.getFileName(file.name);\n    return response;\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"UploadImage\">\n        <p className=\"UploadImage__Title\">Choose a pic</p>\n        <input\n          accept=\"image/*\"\n          className={classes.input}\n          id=\"flat-button-file\"\n          onChange={e => this.onDrop(e.target.files)}\n          multiple\n          type=\"file\"\n        />\n        <label htmlFor=\"flat-button-file\">\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            component=\"span\"\n            className={classes.button}\n          >\n            Upload\n            <CloudUploadIcon className={classes.rightIcon} />\n          </Button>\n        </label>\n      </div>\n    );\n  }\n}\n\n{\n  /* <Dropzone onDrop={this.onDrop}>Arrastre aqui un archivo</Dropzone>;  */\n}\n\nexport default graphql(gql`\n  mutation($file: Upload!) {\n    singleUpload(file: $file) {\n      id\n      path\n      filename\n      mimetype\n      encoding\n    }\n  }\n`)(withStyles(styles)(UploadImage));\n"]},"metadata":{},"sourceType":"module"}