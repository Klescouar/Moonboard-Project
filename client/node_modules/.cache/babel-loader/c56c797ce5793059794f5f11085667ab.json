{"ast":null,"code":"import _classCallCheck from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/poncho/Documents/PROJET/moonboard-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Dialog/Dialog.js\";\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\n\nvar DialogPopin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DialogPopin, _Component);\n\n  function DialogPopin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DialogPopin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DialogPopin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openSuccessSnackBar: false,\n      openErrorSnackBar: false\n    };\n    return _this;\n  }\n\n  _createClass(DialogPopin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          fullScreen = _this$props.fullScreen,\n          openDialog = _this$props.openDialog,\n          handleClose = _this$props.handleClose,\n          _this$props$dialog = _this$props.dialog,\n          title = _this$props$dialog.title,\n          description = _this$props$dialog.description,\n          action = _this$props.action;\n      var _this$state = this.state,\n          openErrorSnackBar = _this$state.openErrorSnackBar,\n          openSuccessSnackBar = _this$state.openSuccessSnackBar;\n      return React.createElement(Dialog, {\n        className: \"RemoveArticle__Dialog\",\n        fullScreen: fullScreen,\n        open: openDialog,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(SnackBarSuccess, {\n        text: 'SUCCESS_TEXT',\n        open: openSuccessSnackBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(SnackBarError, {\n        text: 'ERROR_TEXT',\n        open: openErrorSnackBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(DialogTitle, {\n        className: \"RemoveArticle__Dialog__Title\",\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, title), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, description)), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return action().then(function (res) {\n            handleClose();\n\n            _this2.setState({\n              openSuccessSnackBar: true,\n              openDialog: false\n            });\n\n            setTimeout(function () {\n              _this2.setState({\n                openSuccessSnackBar: false\n              });\n            }, 3000);\n          }).catch(function (err) {\n            _this2.setState({\n              openErrorSnackBar: true,\n              openDialog: false\n            });\n\n            setTimeout(function () {\n              _this2.setState({\n                openErrorSnackBar: false\n              });\n            }, 3000);\n          });\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"No\")));\n    }\n  }]);\n\n  return DialogPopin;\n}(Component);\n\nexport default DialogPopin;","map":{"version":3,"sources":["/home/poncho/Documents/PROJET/moonboard-project/client/src/components/Dialog/Dialog.js"],"names":["React","Component","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","SnackBarSuccess","SnackBarError","DialogPopin","state","openSuccessSnackBar","openErrorSnackBar","props","fullScreen","openDialog","handleClose","dialog","title","description","action","then","res","setState","setTimeout","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport SnackBarSuccess from '../SnackBar/SnackBarSuccess';\nimport SnackBarError from '../SnackBar/SnackBarError';\n\nclass DialogPopin extends Component {\n  state = {\n    openSuccessSnackBar: false,\n    openErrorSnackBar: false\n  };\n\n  render() {\n    const {\n      fullScreen,\n      openDialog,\n      handleClose,\n      dialog: { title, description },\n      action\n    } = this.props;\n    const { openErrorSnackBar, openSuccessSnackBar } = this.state;\n    return (\n      <Dialog\n        className=\"RemoveArticle__Dialog\"\n        fullScreen={fullScreen}\n        open={openDialog}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <SnackBarSuccess text={'SUCCESS_TEXT'} open={openSuccessSnackBar} />\n        <SnackBarError text={'ERROR_TEXT'} open={openErrorSnackBar} />\n        <DialogTitle\n          className=\"RemoveArticle__Dialog__Title\"\n          id=\"responsive-dialog-title\"\n        >\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() =>\n              action()\n                .then(res => {\n                  handleClose();\n                  this.setState({\n                    openSuccessSnackBar: true,\n                    openDialog: false\n                  });\n                  setTimeout(() => {\n                    this.setState({\n                      openSuccessSnackBar: false\n                    });\n                  }, 3000);\n                })\n                .catch(err => {\n                  this.setState({\n                    openErrorSnackBar: true,\n                    openDialog: false\n                  });\n                  setTimeout(() => {\n                    this.setState({\n                      openErrorSnackBar: false\n                    });\n                  }, 3000);\n                })\n            }\n            color=\"primary\"\n          >\n            Yes\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default DialogPopin;\n"]},"metadata":{},"sourceType":"module"}